// QueryDSL 버전정보 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api"
    )

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // h2
    runtimeOnly 'com.h2database:h2'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // dotenv
    implementation 'io.github.cdimascio:java-dotenv:5.1.1'


    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'


    // thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.19'


    // aws s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'


    //mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //mongodb test 를 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //mongodb 드라이버
    implementation 'org.mongodb:mongodb-driver-sync:4.11.1'

    implementation 'org.mongodb:mongodb-driver-core:4.11.1'
    implementation 'org.mongodb:bson:4.11.1'
    //webSocket 구현을 위한 기본적인 패키지
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    //STOMP(Simple Text Oriented Messaging Protocol) 구현체
    implementation 'org.webjars:stomp-websocket:2.3.4'

    //WebSocket을 지원하지 않는 브라우저를 위한 대체 솔루션
    implementation 'org.webjars:sockjs-client:1.5.1'

    // Spring WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Jackson for JSON handling
    implementation 'com.fasterxml.jackson.core:jackson-databind'


    // Apache POI
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
}

tasks.named('test') {
    useJUnitPlatform()
}
// === ⭐ QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}


// bootJar - 중복 제거
tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// bootWar - 중복 제거
tasks.named('jar') {
    enabled = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// JAXB 의존성 중복 해결을 위한 설정
configurations.all {
    resolutionStrategy {
        // JAXB 버전 충돌 해결
        force 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
        force 'com.sun.xml.bind:jaxb-impl:4.0.0'
    }
}